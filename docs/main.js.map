{"version":3,"sources":["./src/app/modules/other/error-message/error-message.component.ts","./src/app/modules/other/error-message/error-message.component.html","./src/environments/environment.ts","./src/app/modules/main/home/home.component.ts","./src/app/modules/main/home/home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/favoriteCityWeather.model.ts","./src/app/modules/main/favorites.service.ts","./src/app/app.module.ts","./src/app/models/current-city-weather.model.ts","./src/app/modules/main/main.module.ts","./src/app/modules/other/page-not-found/page-not-found.component.ts","./src/app/modules/other/page-not-found/page-not-found.component.html","./src/app/modules/main/favorites/favorites.component.ts","./src/app/modules/main/favorites/favorites.component.html","./src/app/modules/main/basic-nav/basic-nav.component.ts","./src/app/modules/main/basic-nav/basic-nav.component.html","./src/app/modules/main/main.service.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/modules/other/other.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core'\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n\n@Component({\n  selector: 'app-error-message',\n  templateUrl: './error-message.component.html',\n  styleUrls: ['./error-message.component.css']\n})\nexport class ErrorMessageComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<ErrorMessageComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 mat-dialog-title>{{data.errorMessage}}</h1>\n<div mat-dialog-content></div>\n<div mat-dialog-actions>\n  <button mat-raised-button mat-button mat-dialog-close>OK</button>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from '../main.service';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith, catchError } from 'rxjs/operators';\nimport { currentCityWeather } from 'src/app/models/current-city-weather.model';\nimport { FavoriteCityWeather } from 'src/app/models/favoriteCityWeather.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { FavoritesService } from '../favorites.service';\n\nconst DEFAULT_CITY_NAME = \"Tel Aviv\"\nconst DEFAULT_CITY_KEY = \"215854\"\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private _service: MainService, private _acr: ActivatedRoute,private _favoriteService:FavoritesService) { }\n\n  ngOnInit() {\n    this._acr.paramMap.subscribe(data => {\n      if (data.has(\"key\")) {\n        this.initializeScreenWithParameters(data.get(\"key\")||undefined, data.get(\"name\")||undefined)\n      }\n      //get the position\n      else {\n        navigator.geolocation.getCurrentPosition((position) => {\n          this._service.getGeoposition(position.coords.latitude, position.coords.longitude).subscribe(data => {\n            this.initializeScreenWithParameters(data.Key, data.LocalizedName)\n          })\n        }), (_err: any) => {\n          this.initializeScreenWithParameters()\n        };\n      }\n    })\n  }\n\n  initializeScreenWithParameters(keyCity: string=DEFAULT_CITY_KEY, nameCity: string=DEFAULT_CITY_NAME) {\n    this.currentCity = new currentCityWeather()\n    this.getFiveDaysForecatst(keyCity)\n    this.currentCity.name = nameCity\n    this.currentCity.isCelsius = \"true\"\n  }\n\n  inputCityControl = new FormControl()\n  currentCity: currentCityWeather\n  isInFavorite: boolean\n  cities$:Observable<any[]>\n\n  onKeyPressInSearchCity() {\n    this.cities$=this._service.getAutoComplete(this.inputCityControl.value).pipe(\n      catchError(err=> this.errorOnKeyPress)\n    )\n  }\n\n  errorOnKeyPress(){\n    this._service.openDialogError(\"oops fault, please Enter data again\")\n  }\n\n  displayNameCity(city: any): string {\n    return city && city.LocalizedName ? city.LocalizedName : '';\n  }\n\n  selectedCity(value: any) {\n    this.getFiveDaysForecatst(value.Key)\n    this.currentCity.name = value.LocalizedName\n  }\n\n  unitTempChange(event: any) {\n    this.getFiveDaysForecatst(this.currentCity.key)\n  }\n\n  getFiveDaysForecatst(_currentCityKey: string) {\n    this._service.get5DaysOfDailyForecasts(_currentCityKey, this.currentCity.isCelsius).subscribe(data => {\n      this.currentCity.fiveDaysDailyForecasts = data.DailyForecasts\n      this.currentCity.key = _currentCityKey\n      this._favoriteService.isInFavorite(this.currentCity.key, this.currentCity.name).subscribe(result=>{\n        this.isInFavorite=result\n      })\n    },err=>{\n      this._service.openDialogError(\"Oops, fault please try again\")\n    })\n  }\n  \n  //add to favorites or remove from favorite\n  addOrDeleteFavorites() {\n    let currentCityFavorite = new FavoriteCityWeather(this.currentCity.name, this.currentCity.key)\n    if (this.isInFavorite) {\n      this._favoriteService.remove(currentCityFavorite)\n    }\n    else {\n      this._favoriteService.add(currentCityFavorite)\n    }\n    this.isInFavorite = !this.isInFavorite\n  }\n}\n","<div class=\"wrapper\">\n    <div>\n        <form class=\"select-city-form\">\n            <mat-form-field class=\"city-form-full-width\" appearance=\"fill\">\n                <mat-label>Search City</mat-label>\n                <input type=\"text\" aria-label=\"Number\" matInput [formControl]=\"inputCityControl\"\n                    [matAutocomplete]=\"auto\" (input)=\"onKeyPressInSearchCity()\">\n                <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"displayNameCity\"\n                    (optionSelected)=\"selectedCity($event.option.value)\">\n                    <mat-option *ngFor=\"let option of cities$ | async\" [value]=\"option\">\n                        {{option.LocalizedName}}\n                    </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n        </form>\n    </div>\n    <div *ngIf=\"currentCity&&currentCity.fiveDaysDailyForecasts\">\n        <div class=\"flex-container\">\n            <div class=\"flex-row\">\n                <div class=\"title\">{{currentCity.name}}</div>\n                <div>\n                    <mat-radio-group color=\"primary\" class=\"example-radio-group\" aria-label=\"Select an option\"\n                        (change)=\"unitTempChange($event)\" [(ngModel)]=\"currentCity.isCelsius\">\n                        <mat-radio-button value=\"true\">Celsius</mat-radio-button>\n                        <mat-radio-button value=\"false\">Fahrenheit</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </div>\n            <div class=\"flex-column\">\n                <mat-chip-list #chipList aria-label=\"Video keywords\" multiple >\n                    <mat-chip>\n                      {{currentCity.fiveDaysDailyForecasts[0].Date | date}}\n                    </mat-chip>\n                </mat-chip-list>\n                <div class=\"title title-primary\" color=\"primary\">{{currentCity.fiveDaysDailyForecasts[0].Day.IconPhrase}}</div>\n                <div>Minimum : {{currentCity.fiveDaysDailyForecasts[0].Temperature.Minimum.Value}}</div>\n                <div>Maximum : {{currentCity.fiveDaysDailyForecasts[0].Temperature.Maximum.Value}}</div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"currentCity\" class=\"flex-row-card\">\n        <mat-card class=\"flex-column\" *ngFor=\"let day of currentCity.fiveDaysDailyForecasts\">\n            <span>{{day.Date|date:'EEEE'}}</span>\n            <span>{{day.Temperature.Minimum.Value}} - {{day.Temperature.Maximum.Value}}</span>\n        </mat-card>\n    </div>\n    <div>\n        <button (click)=\"addOrDeleteFavorites()\" mat-stroked-button color=\"primary\">\n            <span *ngIf=\"isInFavorite\">delete from favorite </span>\n            <span *ngIf=\"!isInFavorite\">add to favorite </span>\n            <mat-icon> favorite</mat-icon>\n        </button>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'weather';\n\n}\n","\n<router-outlet></router-outlet>\n\n","export class FavoriteCityWeather{\r\n    name:string\r\n    key:string\r\n    currentWeatherText:string\r\n    currentWeatherValue:string\r\n    constructor(_name:string,_key:string) {\r\n        this.name=_name\r\n        this.key=_key\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { ObservableStore } from '@codewithdan/observable-store';\nimport { FavoriteCityWeather } from 'src/app/models/favoriteCityWeather.model';\nimport { of } from 'rxjs';\n\nexport interface FavoritesState {\n  favorites: Array<FavoriteCityWeather>\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class FavoritesService extends ObservableStore<FavoritesState> {\n\n  constructor() {\n    const initialState = {\n      favorites: []\n    }\n    super({ trackStateHistory: true });\n    this.setState(initialState, 'INIT_STATE');\n  }\n\n  get() {\n    const favorites = this.getState().favorites;\n    if (favorites) {\n      return of(favorites)\n    }\n    else {\n      return of(null)\n    }\n  }\n\n  add(favoriteCity: FavoriteCityWeather) {\n    let state = this.getState();\n    state.favorites.push(favoriteCity);\n    this.setState({ favorites: state.favorites }, 'add_favorite');\n  }\n\n  remove(favoriteCity: FavoriteCityWeather) {\n    let state = this.getState();\n    let index = state.favorites.indexOf(favoriteCity)\n    state.favorites.splice(index, 1);\n    this.setState({ favorites: state.favorites }, 'remove_favorite');\n  }\n\n  isInFavorite(idCity: string, nameCity: string) {\n    let flag = false\n    let state = this.getState()\n    let match_fav=state.favorites.find(favorite_city=>favorite_city.name==nameCity)\n    flag=match_fav!=undefined\n    return of(flag)\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainModule } from './modules/main/main.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OtherModule } from './modules/other/other.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MainModule,\n    OtherModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class currentCityWeather{\r\n    name:string\r\n    key:string\r\n    fiveDaysDailyForecasts:any[]\r\n    isCelsius:string\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FavoritesComponent } from './favorites/favorites.component';\nimport { HomeComponent } from './home/home.component';\nimport { MaterialModule } from 'src/app/material.module';\nimport { MainService } from './main.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BasicNavComponent } from './basic-nav/basic-nav.component';\nimport { PageNotFoundComponent } from '../other/page-not-found/page-not-found.component';\nimport { FavoritesService } from './favorites.service';\n\n\n\n@NgModule({\n  declarations: [BasicNavComponent,FavoritesComponent,HomeComponent],\n  imports: [\n    CommonModule,MaterialModule,HttpClientModule,RouterModule,ReactiveFormsModule,FormsModule\n  ],\n  providers:[\n    MainService,FavoritesService\n  ]\n})\nexport class MainModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {  Router } from '@angular/router';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor(private _router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goToHomePage(){\n    this._router.navigate([\"home\"])\n  }\n\n}\n","<p>oops 404-page not found:(</p>\n<button (click)=\"goToHomePage()\"mat-raised-button  color=\"primary\">Go To Home Page</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from '../main.service';\nimport { Router } from '@angular/router';\nimport { FavoriteCityWeather } from 'src/app/models/favoriteCityWeather.model';\nimport { FavoritesService } from '../favorites.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.css']\n})\nexport class FavoritesComponent implements OnInit {\n  constructor(private _service: MainService, private _router: Router, private _favoriteService: FavoritesService) { }\n\n  ngOnInit(): void {\n    this.storeFavorites = this._favoriteService.stateChanged.subscribe(state => {\n      if (state) {\n        this.favoriteFromService = state.favorites;\n      }\n    });\n    this.getCurrentWeatherToAllFavoriteCity()\n  }\n\n  ngOnDisroy() {\n    this.storeFavorites.unsubscribe()\n  }\n\n  storeFavorites: Subscription\n  favoriteFromService: Array<FavoriteCityWeather> = []\n\n  getCurrentWeatherToAllFavoriteCity() {\n    this.favoriteFromService.forEach(favorite => {\n      this._service.getCurrentConditions(favorite.key).subscribe(weatherDetails => {\n        favorite[\"currentWeatherText\"] = weatherDetails[0].WeatherText\n        favorite[\"currentWeatherValue\"] = weatherDetails[0].Temperature.Metric.Value\n      },err=>{\n        this._service.openDialogError(\"oops fault, please try later\")\n      })\n    })\n  }\n\n  showFullWeather(key: string, name: string) {\n    this._router.navigate([\"/home\", key, name])\n  }\n\n  removeFromFavorites(cityToRemove: FavoriteCityWeather) {\n    this._favoriteService.remove(cityToRemove)\n  }\n}\n","<div class=\"flex-container\">\n    <div class=\"title_fav\">favorites</div>\n    <div>\n        <mat-icon color=\"primary\" class=\"icon-fav\" colo>favorite  </mat-icon>\n        <mat-icon color=\"primary\" class=\"icon-fav\" colo>favorite  </mat-icon>\n        <mat-icon color=\"primary\" class=\"icon-fav\" colo>favorite  </mat-icon>\n    </div>\n    <div class=\"flex-row-card\">\n        <mat-card  class=\"flex-column\"  *ngFor=\"let city of favoriteFromService\">\n            <div (click)=\"showFullWeather(city.key,city.name)\" class=\"flex-column\" >\n                <div>{{city.name}}</div>\n                <div>{{city.currentWeatherText}}</div>\n                <div> {{city.currentWeatherValue}}</div>\n            </div>\n            <button (click)=\"removeFromFavorites(city)\" mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n                <mat-icon>delete</mat-icon>\n            </button>\n        </mat-card>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-basic-nav',\n  templateUrl: './basic-nav.component.html',\n  styleUrls: ['./basic-nav.component.css']\n})\nexport class BasicNavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n    <header>\n        <p>\n            <mat-toolbar color=\"primary\">\n                <span>Weather</span>\n                <span class=\"example-spacer\"></span>\n                <button routerLink=\"/home\" routerLinkActive=\"activeNav\" mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n                    <mat-icon>home</mat-icon>\n                </button>\n                <button routerLink=\"/favorites\" routerLinkActive=\"activeNav\" mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n                    <mat-icon>favorite</mat-icon>\n                </button>\n            </mat-toolbar>\n        </p>\n\n    </header>\n    <nav></nav>\n    <section>\n        <router-outlet></router-outlet>\n    </section>\n    <aside></aside>\n    <footer></footer>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { query } from '@angular/animations';\nimport { FavoriteCityWeather } from 'src/app/models/favoriteCityWeather.model';\nimport { flatMap } from 'rxjs/operators';\nimport { ErrorMessageComponent } from '../other/error-message/error-message.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nconst API_KEY:string=\"HOXo0AOzySptQ1ARA6acEflCJKWaeRGo\"\n@Injectable()\nexport class MainService {\n\n  constructor(private _http:HttpClient,public dialog: MatDialog) { }\n\n  getAutoComplete(key_to_search: string): Observable<any> {\n    const url = `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${key_to_search}`;\n    return this._http.get<any>(url)\n  }\n\n  getCurrentConditions(idCurrentCity:string):Observable<any>{\n    return this._http.get<any>(`http://dataservice.accuweather.com/currentconditions/v1/${idCurrentCity}?apikey=${API_KEY}`)\n  }\n  \n  get5DaysOfDailyForecasts(key_to_search:string,is_metric:string):Observable<any>{\n    return this._http.get<any>(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${key_to_search}?apikey=${API_KEY}&metric=${is_metric}`)\n  }\n\n  getGeoposition(lat:number,lon:number):Observable<any>{\n    return this._http.get<any>(`http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${lat}%2C${lon}`)\n  }\n\n   //error message\n   openDialogError(errorMessageToSend:string): void {\n    const dialogRef = this.dialog.open(ErrorMessageComponent, {\n      width: '250px',\n      data: {errorMessage:errorMessageToSend}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './modules/main/home/home.component';\nimport { FavoritesComponent } from './modules/main/favorites/favorites.component';\nimport { BasicNavComponent } from './modules/main/basic-nav/basic-nav.component';\nimport { PageNotFoundComponent } from './modules/other/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {path:\"\",component:BasicNavComponent,\n  children:[\n    {path:\"\",redirectTo:\"home\",pathMatch:\"full\"},\n    {path:\"home\",component:HomeComponent},\n    {path:\"home/:key/:name\",component:HomeComponent},\n    {path:\"favorites\",component:FavoritesComponent},\n    {path:\"**\",component:PageNotFoundComponent}\n  ]},\n  {path:\"**\",component:PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n import { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\r\n// import { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\nimport { MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n\r\nconst modules = [\r\n    MatCheckboxModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatBadgeModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatNativeDateModule\r\n    // NgxMatFileInputModule,\r\n    // MatDialog\r\n    ]\r\n\r\n@NgModule( {\r\n    imports: [\r\n        CommonModule,\r\n        // BrowserAnimationsModule,\r\n        ...modules\r\n    ],\r\n    exports: [...modules,],\r\n    providers: [\r\n        MatDatepickerModule,\r\n    ]\r\n} )\r\n\r\nexport class MaterialModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ErrorMessageComponent } from './error-message/error-message.component';\nimport { MaterialModule } from 'src/app/material.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [PageNotFoundComponent,ErrorMessageComponent],\n  imports: [\n    CommonModule,MaterialModule,RouterModule\n  ],\n  exports:[RouterModule]\n})\nexport class OtherModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}